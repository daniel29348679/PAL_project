當測試「Test case 1 of 3」時，Input為>>1
// ========== Proj. 4    Prob. 10   Test 1/3 (viewable) ============

  // =========== Proj. 3 tests (from Prob. 3&4) START =========

  // string *cs1 = new string( "Hi" ), *cs2 = new string( "Hello" ) ;
  // cs1->append( *cs2 ) ;
  // cout << *cs1 << "\n" ;

  // preparation

  int a1, a2, a3 ;
  float f1, f2, f3 ;
  bool b1, b2, b3 ;
  string s1, s2, s3 ;
  char c1, c2, c3 ;
  int a[10], b[10] ;
  string s[10] ;
  int i, j, k ;
  
  // Problem 3 : test data 1/3 ( viewable )

  a1 = 10 ;
  a2 = 20 ;
  a3 = -30 ;
  f1 = 1.5 ;
  f2 = 0.25 ;
  f3 = -0.125 ;
  s1 = "Hi" ;
  s2 = "Hello" ;
  s3 = "What" ;
  c1 = 'a' ;
  c2 = 'b' ;
  c3 = 'c' ;
  b1 = b2 = b3 = false ;
  
  i = j = k = 0 ;
  
  while ( i < 10 ) {
    a[i] = 10 ;
    b[i] = 20 ;
    s[i] = "Bravo" ;
    i++ ;
  } // while i < 10

  // + - * / %
  cout << ( a[1] = a2 = a[2]+a[3]*a[3]-a1-a2-a[4]%50 ) << "\n" ;
  cout << a[1]-305%a[2]-300/a[3]- ( a[3] = a2-a[4] ) %50 << "\n" ;
  cout << a[1]-305%a[2]- ( a[3] = a2-a[4] ) %50-300/a[3] << "\n" ;
  cout << ( a[2] = 300 / ( a[2]+a[1] ) +a1 ) +10+a[2] << "\n" ;  
  cout << a[1]- - ( a[2]-a3*a[3] ) << "\n" ;

  // << >>
  cout << a[2] << "\n" ;
  cout << ( a[2] = ( a[2] << 2 ) -a2-a[1]/2*3%25 ) << "\n" ;
  cout << ( a[1] = a[2] = ( a[2] >> 2 ) + a[1]%a[2] ) << "\n" ;

  // && || ! < <= > >=  ==   !=
  cout << ( b1 = f1-a[2]*f1+a2 > f2-a[2]*f1+a2 ) << "\n" ;
  cout << ( b2 = a[1]+a[2] >= a[3]%35 ) << "\n" ;
  cout << ( b3 = b1 && ( b2 || a[3] >= a[2]%a[1] ) ) << "\n" ;
  cout << ( b3 = b3 || ( a[1]*a3 < a[2]*a2 && ! ( b2 || a[3] >= a[2]%a[1] ) ) ) << "\n" ;

  cout << ( ! ( a[1] == a[1]*2-a[1] ) && b3 ) << "\n" ;
  cout << ( b3 || a[1] != a[1]*2-a[1] || ! ( a2 > a[2] ) ) << "\n" ;
  cout << ( b3 || ( a[1] != a[1]*2-a[1] && true ) || ! ( a2 > a[2] || false ) ) << "\n" ;
  // cout << ( true && false == false ) << "\n" ; // '==' and '!=' should not be
  // cout << ( true || true != false ) << "\n" ;  // applied to booleans

  // string
  cout << ( s[2] = ( s[1] = s[1] + " " + s[2] ) + "!Hello!" + s[1] ) << "\n" ;
  cout << s[1] << "\n" << s[2] << "\n" ;
  cout << ( s[3] = s[2] + c1 + ( s[2] = s1 + s3 ) + s3 + s[2] ) << "\n" ;
  cout << s[1] + "\n" + s[2] + "\n" + s[3] << "\n" ;

  // =========== Proj. 3 tests (from Prob. 3&4) + while END   =========
  
  cout << "------------ Proj. 3 test end --------------\n" ;

int gA, gY ; // 'gY', a to be used global, has to be declared in advance
int gW[ 10 ], gV[ 10 ] ;
string gS[ 10 ] ;
  gY = 3 ;
  gA = 20 ;
  
  i = 0 ;
  while ( i < 10 ) {
    gW[i] = a1*i + 10 ;
    gV[i] = a2*i + 20 ;
    gS[i] = "Q" ;
    i++ ;
  } // while i < 10
  
  i = 0 ;

  cout << "------------ global init end --------------\n" ;

bool Stop( int n ) {

  if ( n < 0 )
    n = -n ;

  if ( n >= 8 ) {
    return true ;
  } // if n >= 8
  else
    return false ;
    
} // Stop()

void G1( int n ) {

  if ( n >= 8 )
    n = n%5 ;
  else if ( n < 0 )
    n = -n%5 ;

  while ( ! Stop( n ) ) {
    cout << "n : " << n << "\n" ;
    n++ ;
  } // while
  
  cout << "----------\n" ;
  
} // G1()

void G2( int n ) {

  if ( n > 0 ) {
    cout << n ;
    n-- ;
    G2( n ) ;
    G2( n ) ;
  } // if n > 0
  else // n <= 0
    return ; 
  
} // G2()

void G3( int n ) {

  if ( n > 0 ) {
    cout << n ;
    n-- ;
    G3( n ) ;
  } // if n > 0
  else // n <= 0
    return ; 
  
  G3( n ) ;
    
} // G3()

int NewNum( int num, int delta ) {

  if ( delta > 30 ) {
    num = delta%5 + 2 ;
    return num ;
  } // if delta > 30
  else if ( delta > 0 )
    num = delta%7 + 2 ;
  else if ( delta == 0 ) 
    return 3 ;
  else
    num = -delta%3 + 2 ;
    
  return num ;

} // NewNum()

int Extreme( int a[ 10 ], bool findMax ) {

  int extreme ;
  extreme = a[0] ;
  
  int i ;
  i = 1 ;
  while ( i < 10 ) {
  
    if ( findMax )
      if ( a[i] > extreme )
        extreme = a[i] ;
      else
        ;
    else // findMin
      if ( a[i] < extreme )
        extreme = a[i] ;
      else
        ;
        
    i++ ;
  } // while
  
  return extreme ;
  
} // Extreme()    

int Average( int a, int b ) {
  return ( a+b ) /2 ;
} // Average()

bool NOT( bool expr ) {
  return ! expr ;
} // NOT()

  cout << "------------ global init end --------------\n" ;

  G1( 253 ) ;
  G1( 127 ) ;
  G2( 3 ) ;
  cout << "\n" ;
  G3( 4 ) ;
  cout << "\n" ;
  cout << NewNum( 100, 200 ) << "\n" ;
  G1( NewNum( 30, 40 ) ) ;
  G1( NewNum( 30, 20 )+52 ) ;
  G1( NewNum( 30, -40 )+51 ) ;
  
  bool findMax ;
  findMax = true ;
  
  cout << "Max of a[] : " << Extreme( a, findMax ) << "\n" 
       << "Min of a[] : " << Extreme( a, NOT( findMax ) ) << "\n"
       << "Max of b[] : " << Extreme( b, findMax ) << "\n" 
       << "Min of b[] : " << Extreme( b, NOT( findMax ) ) << "\n"
       << "Average : " << Average( Average( Extreme( a, findMax ),
                                            Extreme( a, NOT( findMax ) )
                                          ),
                                   Average( Extreme( b, findMax ),
                                            Extreme( b, NOT( findMax ) )
                                          )
                                 ) 
       << "\n" ;

  cout << "-----------Simple Variables-------------\n" ;
  
  cout << "gA : " << gA << " gY : " << gY
       << " a1 : " << a1 << " a2 : " << a2 
       << " s1 : " << s1 << " s2 : " << s2 << "\n" ;
  
  cout << "i : " << i << "\n" ;
  
  cout << "-----------gW[]-------------\n" ;
  
  i = 0 ;
  while ( i < 10 ) {
    cout << gW[ i ] << " " ;
    i++ ;
  } // while
  
  cout << "\n-----------gV[]-------------\n" ;
  
  i = 0 ;
  while ( i < 10 ) {
    cout << gV[ i ] << " " ;
    i++ ;
  } // while

  cout << "\n-----------a[]-------------\n" ;
  
  i = 0 ;
  while ( i < 10 ) {
    cout << a[ i ] << " " ;
    i++ ;
  } // while

  cout << "\n-----------b[]-------------\n" ;
  
  i = 0 ;
  while ( i < 10 ) {
    cout << b[ i ] << " " ;
    i++ ;
  } // while

  cout << "\n-----------gS[]-------------\n" ;
  
  i = 0 ;
  while ( i < 5 ) {
    cout << gS[ i ] << "\n" ;
    i++ ;
  } // while

  cout << "-----------s[]-------------\n" ;
  
  i = 0 ;
  while ( i < 5 ) {
    cout << s[ i ] << "\n" ;
    i++ ;
  } // while

  // ===========================================================
  // ============= also copy the following to PAL ==============
  // ===========================================================

  cout << "---This cout-stmt is not part of the test data.---" ;

Done   (  
  ) 
     ;cout << 10 ; // Program execution
  cout << 3+5 ;     // should not come here.<<

正確的輸出應該是>>Our-C running ...
> Definition of a1 entered ...
Definition of a2 entered ...
Definition of a3 entered ...
> Definition of f1 entered ...
Definition of f2 entered ...
Definition of f3 entered ...
> Definition of b1 entered ...
Definition of b2 entered ...
Definition of b3 entered ...
> Definition of s1 entered ...
Definition of s2 entered ...
Definition of s3 entered ...
> Definition of c1 entered ...
Definition of c2 entered ...
Definition of c3 entered ...
> Definition of a entered ...
Definition of b entered ...
> Definition of s entered ...
> Definition of i entered ...
Definition of j entered ...
Definition of k entered ...
> Statement executed ...
> Statement executed ...
> Statement executed ...
> Statement executed ...
> Statement executed ...
> Statement executed ...
> Statement executed ...
> Statement executed ...
> Statement executed ...
> Statement executed ...
> Statement executed ...
> Statement executed ...
> Statement executed ...
> Statement executed ...
> Statement executed ...
> 70
Statement executed ...
> 25
Statement executed ...
> 50
Statement executed ...
> 36
Statement executed ...
> 1883
Statement executed ...
> 13
Statement executed ...
> -23
Statement executed ...
> -5
Statement executed ...
> true
Statement executed ...
> false
Statement executed ...
> true
Statement executed ...
> true
Statement executed ...
> false
Statement executed ...
> true
Statement executed ...
> true
Statement executed ...
> Bravo Bravo!Hello!Bravo Bravo
Statement executed ...
> Bravo Bravo
Bravo Bravo!Hello!Bravo Bravo
Statement executed ...
> Bravo Bravo!Hello!Bravo BravoaHiWhatWhatHiWhat
Statement executed ...
> Bravo Bravo
HiWhat
Bravo Bravo!Hello!Bravo BravoaHiWhatWhatHiWhat
Statement executed ...
> ------------ Proj. 3 test end --------------
Statement executed ...
> Definition of gA entered ...
Definition of gY entered ...
> Definition of gW entered ...
Definition of gV entered ...
> Definition of gS entered ...
> Statement executed ...
> Statement executed ...
> Statement executed ...
> Statement executed ...
> Statement executed ...
> ------------ global init end --------------
Statement executed ...
> Definition of Stop() entered ...
> Definition of G1() entered ...
> Definition of G2() entered ...
> Definition of G3() entered ...
> Definition of NewNum() entered ...
> Definition of Extreme() entered ...
> Definition of Average() entered ...
> Definition of NOT() entered ...
> ------------ global init end --------------
Statement executed ...
> n : 3
n : 4
n : 5
n : 6
n : 7
----------
Statement executed ...
> n : 2
n : 3
n : 4
n : 5
n : 6
n : 7
----------
Statement executed ...
> 3211211Statement executed ...
> 
Statement executed ...
> 432112113211211Statement executed ...
> 
Statement executed ...
> 2
Statement executed ...
> n : 2
n : 3
n : 4
n : 5
n : 6
n : 7
----------
Statement executed ...
> n : 0
n : 1
n : 2
n : 3
n : 4
n : 5
n : 6
n : 7
----------
Statement executed ...
> n : 4
n : 5
n : 6
n : 7
----------
Statement executed ...
> Definition of findMax entered ...
> Statement executed ...
> Max of a[] : 60
Min of a[] : -5
Max of b[] : 20
Min of b[] : 20
Average : 23
Statement executed ...
> -----------Simple Variables-------------
Statement executed ...
> gA : 20 gY : 3 a1 : 10 a2 : 70 s1 : Hi s2 : Hello
Statement executed ...
> i : 0
Statement executed ...
> -----------gW[]-------------
Statement executed ...
> Statement executed ...
> 10 20 30 40 50 60 70 80 90 100 Statement executed ...
> 
-----------gV[]-------------
Statement executed ...
> Statement executed ...
> 20 90 160 230 300 370 440 510 580 650 Statement executed ...
> 
-----------a[]-------------
Statement executed ...
> Statement executed ...
> 10 -5 -5 60 10 10 10 10 10 10 Statement executed ...
> 
-----------b[]-------------
Statement executed ...
> Statement executed ...
> 20 20 20 20 20 20 20 20 20 20 Statement executed ...
> 
-----------gS[]-------------
Statement executed ...
> Statement executed ...
> Q
Q
Q
Q
Q
Statement executed ...
> -----------s[]-------------
Statement executed ...
> Statement executed ...
> Bravo
Bravo Bravo
HiWhat
Bravo Bravo!Hello!Bravo BravoaHiWhatWhatHiWhat
Bravo
Statement executed ...
> ---This cout-stmt is not part of the test data.---Statement executed ...
> Our-C exited ...<<