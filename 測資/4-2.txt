1
// ========== Proj. 4    Prob. 2   Test 1/3 (viewable) ============

  // =========== Proj. 3 tests (from Prob. 3&4) + while START =========

  // preparation

  int a1, a2, a3 ;
  float f1, f2, f3 ;
  bool b1, b2, b3 ;
  string s1, s2, s3 ;
  char c1, c2, c3 ;
  int a[10], b[10] ;
  string s[10] ;
  int i, j, k ;

  // Problem 3 and 4 : test data 1/3 (viewable)

  a1 = 10 ;
  a2 = 20 ;
  a3 = -30 ;
  f1 = 1.5 ;
  f2 = 0.25 ;
  f3 = -0.125 ;
  s1 = "Hi" ;
  s2 = "Hello" ;
  s3 = "What" ;
  c1 = 'a' ;
  c2 = 'b' ;
  c3 = 'c' ;
  b1 = b2 = b3 = false ;
  
  i = j = k = 0 ;
  
  while ( i < 10 ) {
    a[i] = 10 ;
    b[i] = 20 ;
    s[i] = "Bravo" ;
    i++ ;
  } // while i < 10

  // + - * / %
  cout << ( a[1] = a2 = a[2]+a[3]*a[3]-a1-a2-a[4]%50 ) << "\n" ;
  cout << a[1]-305%a[2]-300/a[3]- ( a[3] = a2-a[4] ) %50 << "\n" ;
  cout << a[1]-305%a[2]- ( a[3] = a2-a[4] ) %50-300/a[3] << "\n" ;
  cout << ( a[2] = 300 / ( a[2]+a[1] ) +a1 ) +10+a[2] << "\n" ;  
  cout << a[1]- - ( a[2]-a3*a[3] ) << "\n" ;

  // << >>
  cout << a[2] << "\n" ;
  cout << ( a[2] = ( a[2] << 2 ) -a2-a[1]/2*3%25 ) << "\n" ;
  cout << ( a[1] = a[2] = ( a[2] >> 2 ) + a[1]%a[2] ) << "\n" ;

  // && || ! < <= > >=  ==   !=
  cout << ( b1 = f1-a[2]*f1+a2 > f2-a[2]*f1+a2 ) << "\n" ;
  cout << ( b2 = a[1]+a[2] >= a[3]%35 ) << "\n" ;
  cout << ( b3 = b1 && ( b2 || a[3] >= a[2]%a[1] ) ) << "\n" ;
  cout << ( b3 = b3 || ( a[1]*a3 < a[2]*a2 && ! ( b2 || a[3] >= a[2]%a[1] ) ) ) << "\n" ;

  cout << ( ! ( a[1] == a[1]*2-a[1] ) && b3 ) << "\n" ;
  cout << ( b3 || a[1] != a[1]*2-a[1] || ! ( a2 > a[2] ) ) << "\n" ;
  cout << ( b3 || ( a[1] != a[1]*2-a[1] && true ) || ! ( a2 > a[2] || false ) ) << "\n" ;
  // cout << ( true && false == false ) << "\n" ; // '==' and '!=' should not be
  // cout << ( true || true != false ) << "\n" ;  // applied to booleans

  // string
  cout << ( s[2] = ( s[1] = s[1] + " " + s[2] ) + "!Hello!" + s[1] ) << "\n" ;
  cout << s[1] << "\n" << s[2] << "\n" ;
  cout << ( s[3] = s[2] + c1 + ( s[2] = s1 + s3 ) + s3 + s[2] ) << "\n" ;
  cout << s[1] + "\n" + s[2] + "\n" + s[3] << "\n" ;

  // =========== Proj. 3 tests (from Prob. 3&4) + while END   =========

int gA, gY ; // 'gY', a to be used global, has to be declared in advance
int gW[ 10 ], gV[ 10 ] ;
  gY = 3 ;
  gA = 20 ;
  
  i = 0 ;
  while ( i < 10 ) {
    gW[i] = a1*i + 10 ;
    gV[i] = a2*i + 20 ;
    i++ ;
  } // while i < 10

void F21( int gA, int w[ 10 ] ) {

  int a[ 15 ] ;
  int i ;
  i = 0 ;
  while ( i < 15 ) {
    a[i] = i*2+1 ;
    i++ ;
  } // while i < 15
  
  int gX, b ;
  gX = b = 12+gY+a[12] ; // though global, 'gY' has to be declared in advance
  cout << "F2(): gX : " << gX << " ; gA : " << gA << "\n" ;
  gA += b ;
  
  if ( gA < 0 )
    gA = -gA ;
    
  gA += a[ gA%15 ] ;
 
  i = 0 ;
  while ( i < 10 ) {
    w[ ( gA+i ) %10 ] += i + a[ ( gA+i ) %15 ] ;
    i++ ;
  } // while i < 10
  
  i = 12 ;
  
  gY = gA * 2 + w[ gA%10 ] - a[ gA%15 ] ;
  gX = 180 - w[ gA%10 ] + a[ gA%15 ] ;
  
} // F21()

int F22( int w[ 10 ], int gA ) {

  int a[ 15 ] ;
  int i ;
  i = 0 ;
  while ( i < 15 ) {
    a[i] = i*2+1 ;
    i++ ;
  } // while i < 15
  
  int gX, b ;
  gX = b = 12+gY+a[3] ; // though global, 'gY' has to be declared in advance
  gA += b ;
  gY = gA * 2 ;
  gX = 180 ;

  gA += a[ gA%15 ] ;
 
  if ( gA < 0 )
    gA = -gA ;
 
  i = 0 ;
  while ( i < 10 ) {
    w[ ( gA+i ) %10 ] += i-5 + a[ ( gA+i ) %15 ] ;
    i++ ;
  } // while i < 10
  
  i = 189 ;
  
  if ( gY < 0 )
    gY = -gY ;
 
  cout << "F2(): gX : " << gX << " ; gA : " << gA 
       << " ; gY : " << gY << " ; b : " << b << "\n" ;
  
  if ( gY > gA )
    return gY+b + w[ gA%10 ] ;
  else
    return gA+b - w[ gA%10 ] ;
    
} // F22()

string F23( int gA, string w[ 10 ] ) {

  int a[ 15 ] ;
  int i ;
  i = 0 ;
  while ( i < 15 ) {
    a[i] = i*2+3 ;
    i++ ;
  } // while i < 15
  
  int gX, b ;
  gX = b = 12+gY+a[3] ; // though global, 'gY' has to be declared in advance
  gA += b ;
  gY = gA * 2 ;
  gX = 180 ;

  gA += a[ gA%15 ] ;
 
  if ( gA < 0 )
    gA = -gA ;
 
  i = 0 ;
  while ( i < 10 ) {
    if ( i%3 == 0 )
      w[ ( gA+i ) %10 ] += " where " ;
    else if ( i%3 == 1 )
      w[ ( gA+i ) %10 ] += " why " ;
    else
      w[ ( gA+i ) %10 ] += " never " ;
    i++ ;
  } // while i < 10
  
  i = 253 ;
  
  if ( gY < 0 )
    gY = -gY ;
 
  cout << "F2(): gX : " << gX << " ; gA : " << gA 
       << " ; gY : " << gY << " ; b : " << b << "\n" ;
  
  if ( gY > gA )
    return w[ ( gA+5 ) %10 ] + " any " ;
  else
    return " all " + w[ ( gA+23 ) %10 ] ;
    
} // F23()

  F21( gA, gW ) ;
  cout << "Global: gA : " << gA << " gY : " << gY << " a1 : " << a1 << "\n" ;
  cout << "Global: gA+gY+F22( gV, gA )+a2 : " << gA+gY+F22( gV, gA )+a2 
       << " a2 : " << a2 << "\n" ;
  cout << "Global: F23( gA, s ) + ' OK?' : " << F23( gA, s ) + " OK?" << "\n" ;
  
  cout << "Global: i : " << i << "\n" ;
  
  i = 0 ;
  while ( i < 10 ) {
    cout << gW[ i ] << " " ;
    i++ ;
  } // while
  
  cout << "\n------------------------\n" ;
  
  i = 0 ;
  while ( i < 10 ) {
    cout << gV[ i ] << " " ;
    i++ ;
  } // while

  cout << "\n------------------------\n" ;
  
  i = 0 ;
  while ( i < 5 ) {
    cout << s[ i ] << " " ;
    i++ ;
  } // while

  cout << "\n------------------------\n" ;
  
  i = 0 ;
  while ( i < 10 ) {
    cout << a[ i ] << " " ;
    i++ ;
  } // while

Done   (  
  ) 
     ;cout << 10 ; // Program execution
  cout << 3+5 ;     // should not come here.<<

正確的輸出應該是>>Our-C running ...
> Definition of a1 entered ...
Definition of a2 entered ...
Definition of a3 entered ...
> Definition of f1 entered ...
Definition of f2 entered ...
Definition of f3 entered ...
> Definition of b1 entered ...
Definition of b2 entered ...
Definition of b3 entered ...
> Definition of s1 entered ...
Definition of s2 entered ...
Definition of s3 entered ...
> Definition of c1 entered ...
Definition of c2 entered ...
Definition of c3 entered ...
> Definition of a entered ...
Definition of b entered ...
> Definition of s entered ...
> Definition of i entered ...
Definition of j entered ...
Definition of k entered ...
> Statement executed ...
> Statement executed ...
> Statement executed ...
> Statement executed ...
> Statement executed ...
> Statement executed ...
> Statement executed ...
> Statement executed ...
> Statement executed ...
> Statement executed ...
> Statement executed ...
> Statement executed ...
> Statement executed ...
> Statement executed ...
> Statement executed ...
> 70
Statement executed ...
> 25
Statement executed ...
> 50
Statement executed ...
> 36
Statement executed ...
> 1883
Statement executed ...
> 13
Statement executed ...
> -23
Statement executed ...
> -5
Statement executed ...
> true
Statement executed ...
> false
Statement executed ...
> true
Statement executed ...
> true
Statement executed ...
> false
Statement executed ...
> true
Statement executed ...
> true
Statement executed ...
> Bravo Bravo!Hello!Bravo Bravo
Statement executed ...
> Bravo Bravo
Bravo Bravo!Hello!Bravo Bravo
Statement executed ...
> Bravo Bravo!Hello!Bravo BravoaHiWhatWhatHiWhat
Statement executed ...
> Bravo Bravo
HiWhat
Bravo Bravo!Hello!Bravo BravoaHiWhatWhatHiWhat
Statement executed ...
> Definition of gA entered ...
Definition of gY entered ...
> Definition of gW entered ...
Definition of gV entered ...
> Statement executed ...
> Statement executed ...
> Statement executed ...
> Statement executed ...
> Definition of F21() entered ...
> Definition of F22() entered ...
> Definition of F23() entered ...
> F2(): gX : 40 ; gA : 20
Statement executed ...
> Global: gA : 20 gY : 142 a1 : 10
Statement executed ...
> Global: gA+gY+F22( gV, gA )+a2 : F2(): gX : 180 ; gA : 184 ; gY : 362 ; b : 161
1059 a2 : 70
Statement executed ...
> Global: F23( gA, s ) + ' OK?' : F2(): gX : 180 ; gA : 432 ; gY : 806 ; b : 383
Bravo never  any  OK?
Statement executed ...
> Global: i : 10
Statement executed ...
> Statement executed ...
> 40 23 36 49 62 75 88 101 114 127 Statement executed ...
> 
------------------------
Statement executed ...
> Statement executed ...
> 42 115 188 261 304 377 450 523 596 669 Statement executed ...
> 
------------------------
Statement executed ...
> Statement executed ...
> Bravo never  Bravo Bravo where  HiWhat where  Bravo Bravo!Hello!Bravo BravoaHiWhatWhatHiWhat why  Bravo never  Statement executed ...
> 
------------------------
Statement executed ...
> Statement executed ...
> 10 -5 -5 60 10 10 10 10 10 10 Statement executed ...
> Our-C exited ...<<